{"version":3,"sources":["webpack:///./components/sync/SurveyDisplayPagination.css","webpack:///./routes/quan-li.tsx","webpack:///./components/sync/SurveyDisplay.tsx","webpack:///../src/FileSaver.js","webpack:///./components/sync/SurveyDisplayPagination.tsx","webpack:///../node_modules/firebase-firestore-lite/dist/Transform.js","webpack:///../node_modules/firebase-firestore-lite/dist/utils.js","webpack:///../node_modules/firebase-firestore-lite/dist/Query.js","webpack:///../node_modules/firebase-firestore-lite/dist/Database.js","webpack:///../node_modules/firebase-firestore-lite/dist/GeoPoint.js","webpack:///../node_modules/firebase-firestore-lite/dist/Document.js","webpack:///../node_modules/firebase-firestore-lite/dist/List.js","webpack:///../node_modules/firebase-firestore-lite/dist/Reference.js","webpack:///../node_modules/firebase-firestore-lite/dist/Transaction.js","webpack:///./components/db/firestore.ts","webpack:///./components/sync/SurveyDisplay.css","webpack:///./components/sync/useMachineId.ts"],"names":["get_main_form_name","surveyType","fetchSurveys","offset","limit","result","db","list","orderBy","reverse","toArray","node","main_form","loadSurvey","surveyId","potential_person_name","data","ho_va_ten","a","name","push","QuanLi","pageSize","parseInt","skip","dataLoader","useAsync","loading","className","error","console","title","explain","message","surveys","setDbSyncStatusToDone","change","type","update","payload","syncStatus","SyncStatus","Synced","surveyForm","revision","surveyDataId","SyncProcessStatus","SurveyDisplay","useState","total","setTotal","count","setCount","Initial","syncProcessStatus","setStatus","machineId","useMachineId","syncData","useAsyncCallback","changes","PrepareData","Promise","all","where","NotSync","each","survey","length","Uploading","i","upsert","Done","notify","success","warn","style","wrapper","header","secondary","onClick","execute","disabled","bordered","fullWidth","scope","map","epoch","createdAt","key","format","Date","href","outline","forms_to_load","getAllSurveyForm","index","temp","blob","Blob","JSON","stringify","surveyData","saveAs","b","autoBom","test","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","send","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","URL","webkitURL","j","createElement","download","rel","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","replace","readAsDataURL","l","m","module","exports","SurveyDisplayPagination","state","setState","useEffect","then","catch","totalPage","Math","ceil","currentPage","floor","main","preventDefault","route","isNumber","v","isNaN","trimPath","path","trim","isPath","s","split","isRef","val","Reference","isCollection","getPathFromRef","ref","_a","_b","_c","_d","Document","isRefType","TypeError","__meta__","restrictTo","isDoc","isPositiveInteger","Number","isInteger","objectToQuery","obj","parentProp","params","encode","encodeURIComponent","prop","undefined","propPath","Array","isArray","forEach","join","getKeyPaths","object","parentPath","mask","Transform","keyPath","concat","compileOptions","options","compiled","Object","entries","value","currentDocument","updateMask","fieldPaths","decodeValue","keys","values","decode","rootPath","GeoPoint","latitude","longitude","Error","fields","encodeValue","transforms","objectClass","toString","call","valueType","substring","toLowerCase","String","toISOString","toJSON","fieldPath","fid","randBytes","crypto","getRandomValues","Uint8Array","from","validateFilter","filter","op","operatorsMap","handleApiResponse","res","ok","json","this","geoPointValue","transformsMap","serverTimestamp","increment","max","min","appendToArray","removeFromArray","transformName","validator","arrayValue","rawDoc","meta","createTime","updateTime","id","pop","defineProperty","contains","in","encoders","select","fieldsArray","encodeFilter","unaryFilter","field","fieldFilter","option","compositeFilter","filters","startAt","endAt","direction","documentToCursor","doc","order","referenceValue","before","queryOptions","Query","parent","init","optionValue","collectionId","allDescendants","arguments","dir","dirMap","asc","desc","number","results","fetch","endpoint","method","splice","encoded","structuredQuery","List","rawList","documents","nextPageToken","pageToken","next","done","Symbol","iterator","isRoot","tx","transaction","commit","transact","Transaction","writes","preconditions","precondition","transform","fieldTransforms","refs","docs","batchGet","__missing__","exists","write","delete","Database","projectId","auth","host","ssl","input","authorizedRequest","entry","found","missing","fn","attempts","db_prefix","upsertSurvey","content","set","upsertData","ls","localStorage","getItem","makeId","setItem"],"mappings":"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","file":"route-quan-li.chunk.5a5fc.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"main__1K-lV\"};","import { db } from \"../components/db/db\";\nimport { useAsync } from \"react-async-hook\";\nimport { Spinner } from \"../components/spinner\";\nimport { Error } from \"../components/error\";\nimport { SurveyDisplay } from \"../components/sync/SurveyDisplay\";\nimport { SurveyType } from \"../components/types\"\nimport { loadSurvey } from \"../components/db/db_calls\";\n\nconst get_main_form_name = (surveyType: SurveyType) => {\n  switch (surveyType) {\n    case \"mau_giao\": return \"mau_giao_form\";\n    case \"tieu_hoc\": return \"tieu_hoc_form\";\n    case \"nguoi_lon\": return \"nguoi_lon_form\";\n  }\n}\nconst fetchSurveys = async (offset: number, limit: number) => {\n  let surveys_list = await db.list.orderBy(\"createdAt\").reverse().offset(offset).limit(limit).toArray();\n\n  const result = []\n  for (const node of surveys_list) {\n    const main_form = await loadSurvey(node.surveyId, get_main_form_name(node.surveyType));\n    const potential_person_name = main_form && main_form.data && main_form.data.ho_va_ten\n\n    let a = { ...node, name: potential_person_name };\n    result.push(a)\n  }\n  return result\n};\n\ninterface QuanLiProps {\n  skip: string;\n  pageSize: string;\n}\n\nconst QuanLi = ({ skip, pageSize }: QuanLiProps) => {\n  const offset = parseInt(skip, 10) || 0;\n  const limit = parseInt(pageSize, 10) || 50;\n\n  const dataLoader = useAsync(fetchSurveys, [offset, limit]);\n\n  if (dataLoader.loading) {\n    return (\n      <div className=\"wrapper\">\n        <Spinner />\n      </div>\n    );\n  } else if (dataLoader.error) {\n    console.error(dataLoader.error);\n    return (\n      <div className=\"wrapper\">\n        <Error title=\"Có lỗi xảy ra\" explain={dataLoader.error.message} />\n      </div>\n    );\n  } else if (dataLoader.result) {\n    const surveys = dataLoader.result;\n\n    return <SurveyDisplay surveys={surveys} offset={offset} limit={limit} />;\n  } else {\n    return (\n      <div className=\"wrapper\">\n        <Error title=\"Có lỗi xảy ra\" explain=\"Trường hợp này không hiểu tại sao xảy ra. quan-li.tsx:63\" />\n      </div>\n    );\n  }\n};\n\nexport default QuanLi;\n","\nimport style from \"./SurveyDisplay.css\";\nimport { useState } from \"react\";\nimport { Table, Button } from \"@trussworks/react-uswds\";\nimport { useAsyncCallback } from \"react-async-hook\";\nimport { Link } from \"preact-router/match\";\nimport { db, IDbSurvey, ISurveyData, SyncStatus } from \"../db/db\";\nimport { loadSurvey } from \"../db/db_calls\";\nimport { upsert, RemoteData } from \"../db/firestore\";\nimport { format } from \"date-fns\";\nimport { notify } from \"../notify\";\nimport { useMachineId } from \"./useMachineId\";\nimport { SurveyDisplayPagination } from \"./SurveyDisplayPagination\";\nimport { SurveyType } from \"../types\";\nimport {saveAs} from \"file-saver\"\nconst formatDate = (epoch: number) => {\n  return format(new Date(epoch), \"dd-MM-yyyy hh:mm:ss\");\n};\n\ninterface SurveyDisplayProps {\n  surveys: Array<IDbSurvey & { name: string | undefined }>;\n  offset: number;\n  limit: number;\n}\n\nenum SyncProcessStatus {\n  Initial = 0,\n  PrepareData = 1,\n  Uploading = 2,\n  Done = 3,\n}\n\nexport const SurveyDisplay: React.FC<SurveyDisplayProps> = ({ surveys, offset, limit }) => {\n  const [total, setTotal] = useState<number>(0);\n  const [count, setCount] = useState<number>(0);\n  const [syncProcessStatus, setStatus] = useState(SyncProcessStatus.Initial);\n  const machineId = useMachineId();\n\n  const syncData = useAsyncCallback(async () => {\n    try {\n      const changes: RemoteData[] = [];\n      setStatus(SyncProcessStatus.PrepareData);\n\n      await Promise.all([\n        db.list.where({ syncStatus: SyncStatus.NotSync }).each((survey) => {\n          changes.push({\n            type: \"survey\",\n            payload: survey,\n          });\n        }),\n        db.data.where({ syncStatus: SyncStatus.NotSync }).each((survey) => {\n          changes.push({\n            type: \"surveyData\",\n            payload: survey,\n          });\n        }),\n        db.revision.where({ syncStatus: SyncStatus.NotSync }).each((survey) => {\n          changes.push({\n            type: \"surveyRevision\",\n            payload: survey,\n          });\n        }),\n      ]);\n\n      setCount(0);\n      setTotal(changes.length);\n      setStatus(SyncProcessStatus.Uploading);\n\n      for (let i = 0; i < changes.length; i++) {\n        const change: RemoteData = changes[i];\n        await upsert(change, machineId);\n\n        await setDbSyncStatusToDone(change);\n        setCount((count) => count + 1);\n      }\n\n      setStatus(SyncProcessStatus.Done);\n      if (count === total) {\n        notify.success(\"Đồng bộ dữ liệu thành công\");\n      } else {\n        notify.warn(`Có lỗi xảy ra khi đồng bộ. Chỉ đồng bộ được ${count}/${total} hồ sơ`);\n      }\n    } catch (error) {\n      console.error(error);\n      notify.error(\"Có lỗi xảy ra khi đồng bộ dữ liệu\");\n    }\n  });\n\n  return (\n    <div className={style.wrapper}>\n      <header className={style.header}>\n        <h1>Quản lí hồ sơ</h1>\n        <Button type=\"button\" secondary onClick={syncData.execute} disabled={syncData.loading}>\n          Đồng bộ\n        </Button>\n      </header>\n\n      {syncProcessStatus === SyncProcessStatus.PrepareData && (\n        <div className={style.syncStatus}>\"Đang tìm dữ liệu....\"</div>\n      )}\n      {syncProcessStatus === SyncProcessStatus.Uploading && (\n        <div className={style.syncStatus}>\n          <span>\n            Tải dữ liệu lên {count}/{total}\n          </span>\n        </div>\n      )}\n      {syncProcessStatus === SyncProcessStatus.Done && (\n        <div className={style.syncStatus}>\n          <span>Đồng bộ thành công</span>\n        </div>\n      )}\n      <SurveyDisplayPagination offset={offset} limit={limit} />\n      <Table bordered fullWidth>\n        <thead>\n          <tr>\n            <th scope=\"col\">Mã số</th>\n            <th scope=\"col\">Loại hồ sơ</th>\n            <th scope=\"col\">Tên</th>\n            <th scope=\"col\">Thời gian tạo</th>\n            <td></td>\n          </tr>\n        </thead>\n        <tbody>\n          {surveys.map(({ surveyId, surveyType, name, createdAt }) => (\n            <tr key={surveyId}>\n              <td>{surveyId}</td>\n              <td>{surveyType}</td>\n              <td>{name}</td>\n              <td>{formatDate(createdAt)}</td>\n              <td>\n                <Link href={`/survey/${surveyId}`}>\n                  <Button type=\"button\">Xem</Button>\n                </Link>\n                <Button\n                  type=\"button\"\n                  outline\n                  onClick={async (e) => {\n                    let forms_to_load = getAllSurveyForm(surveyType);\n                    let result = [];\n                    for (const index in forms_to_load) {\n                      let temp = await loadSurvey(surveyId, forms_to_load[index]);\n                      result.push(temp)\n                    }\n                    let dataToDownload = {surveyId, surveyType, surveyData: result}\n                    var blob = new Blob([JSON.stringify(dataToDownload)], {type: \"text/plain;charset=utf-8\"});\n                    saveAs(blob, `${name}_${surveyId}.voser`)\n                  }}\n                >\n                  Tải về\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n      <SurveyDisplayPagination offset={offset} limit={limit} />\n    </div>\n  );\n};\n\nasync function setDbSyncStatusToDone(change: RemoteData) {\n  switch (change.type) {\n    case \"survey\":\n      await db.list.update(change.payload.surveyId, { syncStatus: SyncStatus.Synced });\n      break;\n    case \"surveyData\":\n      await db.data.update([change.payload.surveyId, change.payload.surveyForm], {\n        syncStatus: SyncStatus.Synced,\n      });\n      break;\n\n    case \"surveyRevision\":\n      await db.revision.update(change.payload.surveyDataId, {\n        syncStatus: SyncStatus.Synced,\n      });\n      break;\n  }\n}\n\nfunction getAllSurveyForm(survey: SurveyType) {\n  switch (survey) {\n    case \"mau_giao\":\n      return [\"mau_giao_form\"];\n    case \"tieu_hoc\":\n      return [\"tieu_hoc_form\", \"tieu_hoc_questionare\", \"tieu_hoc_child_oidp\"];\n    case \"nguoi_lon\":\n      return [\"nguoi_lon_form\", \"nguoi_lon_questionare\", \"nguoi_lon_ohip14\"];\n  }\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","\nimport { useState, useEffect } from \"react\";\nimport { AsyncAction } from \"../types\";\nimport { db } from \"../db/db\";\nimport { Error } from \"../error\";\nimport { route } from \"preact-router\";\nimport style from \"./SurveyDisplayPagination.css\";\n\ninterface SurveyDisplayPaginationProps {\n  offset: number;\n  limit: number;\n}\n\ntype State = AsyncAction<number, string>;\n\nexport const SurveyDisplayPagination: React.FC<SurveyDisplayPaginationProps> = ({ offset, limit }) => {\n  const [state, setState] = useState<State>({ type: \"initial\" });\n\n  useEffect(() => {\n    db.list\n      .count()\n      .then((result) => setState({ type: \"success\", payload: result }))\n      .catch((error) => {\n        console.error(error);\n        setState({ type: \"error\", payload: error.message });\n      });\n  }, []);\n\n  switch (state.type) {\n    case \"initial\":\n    case \"loading\":\n      return null;\n    case \"success\":\n      const total = state.payload;\n      const totalPage = Math.ceil(total / limit);\n      const currentPage = Math.floor(offset / limit) + 1;\n\n      return (\n        <div className={style.main}>\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.preventDefault();\n              route(`/quan_li/${(currentPage - 2) * limit}/${limit}`);\n            }}\n            disabled={currentPage <= 1}\n          >\n            Trang trước ←\n          </button>\n          <span>\n            Trang {currentPage}/{totalPage} ({total} hồ sơ tất cả)\n          </span>\n          <button\n            type=\"button\"\n            onClick={(e) => {\n              e.preventDefault();\n              route(`/quan_li/${currentPage * limit}/${limit}`);\n            }}\n            disabled={currentPage >= totalPage}\n          >\n            Trang tiếp →\n          </button>\n        </div>\n      );\n\n    case \"error\":\n      return (\n        <div className=\"wrapper\">\n          <Error title=\"Đã có lỗi xảy ra\" explain={state.payload} />\n        </div>\n      );\n  }\n};\n","import { encodeValue } from './utils';\n/** @private */\nfunction isNumber(v) {\n    return typeof v === 'number' && !isNaN(v - v);\n}\n/** @private */\nconst transformsMap = {\n    serverTimestamp: ['setToServerValue'],\n    increment: ['increment', isNumber],\n    max: ['maximum', isNumber],\n    min: ['minimum', isNumber],\n    appendToArray: ['appendMissingElements', Array.isArray],\n    removeFromArray: ['removeAllFromArray', Array.isArray]\n};\n/**\n * Represents a value that is the result of an operation\n * made by the Firebase server. For example `serverTimestamp`\n * can't be known in the client, as it evaluates in the server.\n */\nexport default class Transform {\n    /**\n     * @param value when applicable, the value will be used.\n     * for example when using `increment` the value will be the number to increment by.\n     */\n    constructor(name, value) {\n        if (!(name in transformsMap))\n            throw Error(`Invalid transform name: \"${name}\"`);\n        const [transformName, validator] = transformsMap[name];\n        if (validator && !validator(value))\n            throw Error(`The value for the transform \"${name}\" needs to be a${validator === isNumber ? ' number' : 'n array'}.`);\n        if (validator === Array.isArray)\n            this[transformName] = encodeValue(value).arrayValue;\n        else\n            this[transformName] =\n                name === 'serverTimestamp' ? 'REQUEST_TIME' : encodeValue(value);\n    }\n}\n","import { Reference } from './Reference';\nimport GeoPoint from './GeoPoint';\nimport Transform from './Transform';\nimport { Document } from './Document';\n/**\n * Used for generating random fids.\n * @private\n */\nconst validChars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890';\n/**\n * Trims spaces and slashes from a path\n * @private\n */\nexport function trimPath(path) {\n    return path.trim().replace(/^\\/?/, '').replace(/\\/?$/, '');\n}\n/**\n * Returns true if a variable is a path that points to a collection\n * @private\n */\nexport function isPath(type, s) {\n    return (typeof s === 'string' &&\n        s !== '' &&\n        trimPath(s).split('/').length % 2 === (type === 'doc' ? 0 : 1));\n}\n/**\n * Checks if a value is a Reference to a Document\n * @private\n */\nexport function isRef(type, val) {\n    return (val instanceof Reference &&\n        (type === 'doc' ? !val.isCollection : val.isCollection));\n}\n/** @private */\nexport function isRefType(ref) {\n    return (ref instanceof Reference ||\n        ref instanceof Document ||\n        typeof ref === 'string');\n}\n/** @private */\nexport function getPathFromRef(ref) {\n    var _a, _b, _c, _d;\n    if (!isRefType(ref))\n        throw TypeError('Expected a Reference, Document or a path but got something else');\n    return ((_d = (_c = (_b = (_a = ref) === null || _a === void 0 ? void 0 : _a.__meta__) === null || _b === void 0 ? void 0 : _b.path) !== null && _c !== void 0 ? _c : ref.path) !== null && _d !== void 0 ? _d : trimPath(ref));\n}\n/** @private */\nexport function restrictTo(type, ref) {\n    const isDoc = type === 'doc';\n    const path = getPathFromRef(ref);\n    if (!isPath(type, path))\n        throw TypeError(`You are trying to access a method reserved for ${isDoc ? 'Documents' : 'Collections'} with a ${isDoc ? 'Collection' : 'Document'}`);\n    return path;\n}\n/**\n * Checks if a value is a number that is not negative and is an integer\n * @private\n */\nexport function isPositiveInteger(val) {\n    return Number.isInteger(val) && val >= 0;\n}\n/**\n * Converts an Object to a URI query String\n * @private\n */\nexport function objectToQuery(obj = {}, parentProp) {\n    const params = [];\n    const encode = encodeURIComponent;\n    for (const prop in obj) {\n        if (obj[prop] === undefined)\n            continue; // Skip over undefined props.\n        const propPath = parentProp ? `${parentProp}.${prop}` : prop;\n        // If it is an array then we should encode each value independently, and then join.\n        if (Array.isArray(obj[prop])) {\n            obj[prop].forEach((v) => {\n                params.push(`${propPath}=${encode(v)}`);\n            });\n            continue;\n        }\n        if (typeof obj[prop] === 'object') {\n            const val = objectToQuery(obj[prop], propPath);\n            val && params.push(val);\n            continue;\n        }\n        params.push(`${propPath}=${encode(obj[prop])}`);\n    }\n    return (!parentProp && params.length ? '?' : '') + params.join('&');\n}\n/**\n * Returns an array of keyPaths of an object but skips over array's values\n * @private\n */\nexport function getKeyPaths(object, parentPath) {\n    let mask = [];\n    for (const key in object) {\n        if (object[key] instanceof Transform)\n            continue;\n        const keyPath = parentPath ? `${parentPath}.${key}` : key;\n        // Only check child props if the value is an object,\n        // but not null or arrays.\n        if (object[key] !== null &&\n            typeof object[key] === 'object' &&\n            !Array.isArray(object[key]) &&\n            !(object[key] instanceof Date)) {\n            mask = mask.concat(getKeyPaths(object[key], keyPath));\n            continue;\n        }\n        mask.push(keyPath);\n    }\n    return mask;\n}\n/**\n * Compile options object into firebase valid api arguments object\n * @private\n */\nexport function compileOptions(options, obj) {\n    const compiled = {};\n    for (let [key, value] of Object.entries(options)) {\n        if (value === undefined)\n            continue;\n        switch (key) {\n            case 'exists':\n            case 'updateTime':\n                if (!compiled.currentDocument)\n                    compiled.currentDocument = {};\n                compiled.currentDocument[key] = value;\n                break;\n            case 'updateMask':\n                if (!obj)\n                    break;\n                if (value)\n                    compiled.updateMask = { fieldPaths: getKeyPaths(obj) };\n                break;\n            case 'mask':\n                compiled.mask = { fieldPaths: value };\n                break;\n            default:\n                compiled[key] = value;\n        }\n    }\n    return compiled;\n}\n/**\n * Decodes a Firebase Value into a JS one\n * @private\n */\nfunction decodeValue(value, db) {\n    // Get the value type.\n    const type = Object.keys(value)[0];\n    // Replace the firebase raw value, with actual value inside of it.\n    value = value[type];\n    // Some values need to be handled in a specific way,\n    // check if this is one of them, and return the value.\n    switch (type) {\n        case 'integerValue':\n            return Number(value);\n        case 'arrayValue':\n            return value.values\n                ? value.values.map((val) => decodeValue(val, db))\n                : [];\n        case 'mapValue':\n            return decode(value, db);\n        case 'timestampValue':\n            return new Date(value);\n        case 'referenceValue':\n            return new Reference(value.replace(db.rootPath, ''), db);\n        case 'geoPointValue':\n            return new GeoPoint(value.latitude, value.longitude);\n        // These are the rest of the values.\n        // We include all of them instead of using 'default:'\n        // because we use it as validation.\n        case 'stringValue':\n        case 'doubleValue':\n        case 'booleanValue':\n        case 'nullValue':\n        case 'bytesValue':\n            return value;\n    }\n    // If none matched throw.\n    throw Error(`Invalid Firestore value_type \"${type}\"`);\n}\n/**\n * Decodes a Firebase map into a JS object\n * @private\n */\nexport function decode(map, db) {\n    if (db === undefined)\n        throw Error('Argument \"db\" is required but missing');\n    const object = {};\n    for (const key in map.fields) {\n        object[key] = decodeValue(map.fields[key], db);\n    }\n    return object;\n}\n/**\n * Encodes a JS variable into a Firebase Value\n * @private\n */\nexport function encodeValue(value, transforms, parentPath) {\n    const objectClass = Object.prototype.toString.call(value);\n    let valueType = objectClass.substring(8, objectClass.length - 1).toLowerCase() + 'Value';\n    switch (valueType) {\n        case 'numberValue':\n            valueType = Number.isInteger(value) ? 'integerValue' : 'doubleValue';\n            value = valueType === 'integerValue' ? String(value) : value;\n            break;\n        case 'arrayValue':\n            value = value.length ? { values: value.map(encodeValue) } : {};\n            break;\n        case 'dateValue':\n            valueType = 'timestampValue';\n            value = value.toISOString();\n            break;\n        case 'objectValue':\n            // If the object is a custom type, then use its built in encoder\n            // and return it.\n            if (value instanceof Reference || value instanceof GeoPoint)\n                return value.toJSON();\n            // Else assume its intended to be a Map value.\n            valueType = 'mapValue';\n            value = encode(value, transforms, parentPath);\n            break;\n    }\n    return { [valueType]: value };\n}\n/**\n * Converts a Javascript object into a write instruction\n * @private\n */\nexport function encode(object, transforms, parentPath) {\n    const keys = Object.keys(object);\n    if (keys.length === 0)\n        return {};\n    const map = { fields: {} };\n    for (const key of keys) {\n        if (object[key] === undefined)\n            continue;\n        const value = object[key];\n        const path = parentPath ? `${parentPath}.${key}` : key;\n        // If this is a transform then add it to the transforms\n        // list and skip its parsing. but only if a transforms array\n        // was provided.\n        if (value instanceof Transform) {\n            value.fieldPath = path;\n            transforms && transforms.push(value);\n            continue;\n        }\n        map.fields[key] = encodeValue(value, transforms, path);\n    }\n    return map;\n}\n/**\n * Generates 22 chars long random alphanumerics unique identifiers\n * @private\n */\nexport function fid() {\n    const randBytes = crypto.getRandomValues(new Uint8Array(20));\n    return Array.from(randBytes)\n        .map(b => validChars[b % 63])\n        .join('');\n}\n","import { Document } from './Document';\nimport { isRef, isPositiveInteger, encodeValue } from './utils';\n/** @private */\nconst operatorsMap = {\n    '<': 'LESS_THAN',\n    '<=': 'LESS_THAN_OR_EQUAL',\n    '>': 'GREATER_THAN',\n    '>=': 'GREATER_THAN_OR_EQUAL',\n    '==': 'EQUAL',\n    contains: 'ARRAY_CONTAINS',\n    'contains-any': 'ARRAY_CONTAINS_ANY',\n    in: 'IN'\n};\n/**\n * Checks if a value is a valid filter array.\n * @private\n */\nfunction validateFilter(filter) {\n    if (!Array.isArray(filter) || filter.length !== 3)\n        throw Error('Filter missing arguments');\n    const [fieldPath, op, value] = filter;\n    if (typeof fieldPath !== 'string')\n        throw Error('Invalid field path');\n    if (!(op in operatorsMap))\n        throw Error('Invalid operator');\n    if ((value === null || Number.isNaN(value)) && filter[1] !== '==')\n        throw Error('Null and NaN can only be used with the == operator');\n    if (value === undefined)\n        throw Error('Invalid comparative value');\n}\n/**\n * A map of functions used to encode each argument for a query.\n * Each function receives the Library arguments and returns an object\n * that will be converted to Json and sent to the Firestore REST API.\n * @private\n */\nconst encoders = {\n    /**\n     * Converts an option from the Query instance into a valid JSON\n     * object to use with the Firestores REST API.\n     */\n    select(fieldsArray) {\n        const fields = fieldsArray.map(fieldPath => ({ fieldPath }));\n        return fields.length ? { fields } : undefined;\n    },\n    /** Converts a Query filter(array with three items), into an encoded filter */\n    encodeFilter([fieldPath, op, value]) {\n        if (Number.isNaN(value) || value === null) {\n            return {\n                unaryFilter: {\n                    field: { fieldPath },\n                    op: Number.isNaN(value) ? 'IS_NAN' : 'IS_NULL'\n                }\n            };\n        }\n        return {\n            fieldFilter: {\n                field: { fieldPath },\n                op: operatorsMap[op],\n                value: encodeValue(value)\n            }\n        };\n    },\n    /**\n     * Converts an option from the Query instance into a valid JSON\n     * object to use with the Firestore's REST API.\n     */\n    where(option) {\n        if (option.length === 0)\n            return;\n        if (option.length === 1) {\n            return this.encodeFilter(option[0]);\n        }\n        // If there are more than one filters then this is a composite filter.\n        return {\n            compositeFilter: {\n                op: 'AND',\n                filters: option.map(this.encodeFilter)\n            }\n        };\n    },\n    /**\n     * When a startAt or endAt cursor is used,\n     * It is necessary to add a __name__ order at the end\n     * in order to make sure we start from the right spot.\n     */\n    orderBy(fields, options) {\n        var _a, _b, _c;\n        // Only add the __name__ order if a cursor was provided\n        // and if its is not already present.\n        if ((options.startAt || options.endAt) &&\n            ((_a = fields[fields.length - 1]) === null || _a === void 0 ? void 0 : _a.field.fieldPath) !== '__name__')\n            fields.push({\n                field: { fieldPath: '__name__' },\n                // Use the default order when there are no other fields,\n                // And if there are fields, use the order of the last one.\n                // This adheres to the spec at:\n                // https://firebase.google.com/docs/firestore/reference/rest/v1beta1/StructuredQuery\n                direction: (_c = (_b = fields[fields.length - 1]) === null || _b === void 0 ? void 0 : _b.direction) !== null && _c !== void 0 ? _c : 'ASCENDING'\n            });\n        return fields;\n    },\n    documentToCursor(doc, options) {\n        const values = [];\n        for (let order of options.orderBy) {\n            if (order.field.fieldPath === '__name__') {\n                values.push({ referenceValue: doc.__meta__.name });\n                continue;\n            }\n            const value = doc[order.field.fieldPath];\n            value && values.push(encodeValue(value));\n        }\n        return {\n            values,\n            before: true\n        };\n    },\n    startAt(doc, options) {\n        return this.documentToCursor(doc, options);\n    },\n    endAt(doc, options) {\n        return this.startAt(doc, options);\n    }\n};\n/** @private */\nconst queryOptions = [\n    'select',\n    'from',\n    'where',\n    'orderBy',\n    'startAt',\n    'endAt',\n    'offset',\n    'limit'\n];\n/**\n * Query class that represents a Firestore query.\n */\nexport class Query {\n    constructor(parent, init = {}) {\n        this.parent = parent;\n        this.options = {\n            select: [],\n            where: [],\n            orderBy: []\n        };\n        if (!isRef('doc', parent))\n            throw Error('Expected parent to be a reference to a document');\n        // Loop through all the valid options, validate them and then save them.\n        for (const option of queryOptions) {\n            const optionValue = init[option];\n            if (option in init) {\n                // If the option is \"where\" or \"orderBy\", and is also an array,\n                // then it might be a compound value, so we want to pass it one\n                // by one to its method.\n                //\n                // \"where\" is always an array, because every individual filter\n                // is represented by an array, so check to see if its first child\n                // is also an array. if it is, then it might be a compound value.\n                if ((option === 'where' && Array.isArray(optionValue[0])) ||\n                    (option === 'orderBy' && Array.isArray(optionValue))) {\n                    optionValue.forEach((val, i) => {\n                        // Use try/catch in order to provide context for the error.\n                        try {\n                            // Try to save the value.\n                            this[option](val);\n                        }\n                        catch (e) {\n                            throw Error(`Invalid argument \"${option}[${i}]\": ${e.message}`);\n                        }\n                    });\n                    continue;\n                }\n                // If the argument is not an array, then just save it directly.\n                // Again, we use try/catch to catch the error and add context to it.\n                try {\n                    this[option](optionValue);\n                }\n                catch (e) {\n                    throw Error(`Invalid argument \"${option}\": ${e.message}`);\n                }\n            }\n        }\n    }\n    select(fields) {\n        if (!Array.isArray(fields))\n            throw Error('Expected argument to be an array of field paths');\n        fields.forEach((field, i) => {\n            if (typeof field !== 'string')\n                throw Error(`Field path at index [${i}] is not a string`);\n            this.options.select.push(field);\n        });\n    }\n    /**\n     * Adds a collection to query.\n     */\n    from(from) {\n        let { collectionId = from, allDescendants } = from;\n        if (typeof collectionId !== 'string')\n            throw Error('Expected \"collectionId\" to be a string');\n        if (allDescendants !== undefined && typeof allDescendants !== 'boolean')\n            throw Error('Expected the \"allDescendants\" to be a boolean');\n        this.options.from = {\n            collectionId,\n            allDescendants\n        };\n        return this;\n    }\n    where(fieldPath) {\n        const filter = Array.isArray(fieldPath) ? fieldPath : arguments;\n        validateFilter(filter);\n        this.options.where.push(filter);\n        return this;\n    }\n    orderBy(order, dir = 'asc') {\n        const dirMap = {\n            asc: 'ASCENDING',\n            desc: 'DESCENDING'\n        };\n        let { field: fieldPath = order, direction = dir } = order;\n        direction = dirMap[direction];\n        if (typeof fieldPath !== 'string')\n            throw Error('\"field\" property needs to be a string');\n        if (direction === undefined)\n            throw Error('\"direction\" property can only be \"asc\" or \"desc\"');\n        this.options.orderBy.push({ field: { fieldPath }, direction });\n        return this;\n    }\n    startAt(doc) {\n        if (!(doc instanceof Document))\n            throw Error('Expected a Document instance');\n        this.options.startAt = doc;\n        return this;\n    }\n    endAt(doc) {\n        if (!(doc instanceof Document))\n            throw Error('Expected a Document instance');\n        this.options.endAt = doc;\n        return this;\n    }\n    offset(number) {\n        if (!isPositiveInteger(number))\n            throw Error('Expected an integer that is greater than 0');\n        this.options.offset = number;\n        return this;\n    }\n    limit(number) {\n        if (!isPositiveInteger(number))\n            throw Error('Expected an integer that is greater than 0');\n        this.options.limit = number;\n        return this;\n    }\n    async run() {\n        var _a;\n        let results = await this.parent.db.fetch(this.parent.endpoint + ':runQuery', {\n            method: 'POST',\n            body: JSON.stringify(this)\n        });\n        ((_a = results[0]) === null || _a === void 0 ? void 0 : _a.document) || results.splice(0, 1);\n        return results.map((result) => new Document(result.document, this.parent.db));\n    }\n    toJSON() {\n        const encoded = {};\n        for (const option in this.options) {\n            const optionValue = this.options[option];\n            if (option in encoders) {\n                encoded[option] = encoders[option](optionValue, this.options);\n                continue;\n            }\n            encoded[option] = optionValue;\n        }\n        return {\n            structuredQuery: encoded\n        };\n    }\n}\n","import { Reference } from './Reference';\nimport { Document } from './Document';\nimport { restrictTo } from './utils';\nimport { Transaction } from './Transaction';\nimport { Query } from './Query';\n/** @private */\nasync function handleApiResponse(res) {\n    if (!res.ok) {\n        const data = await res.json();\n        if (Array.isArray(data))\n            throw data.length === 1\n                ? Object.assign(new Error(), data[0].error)\n                : data;\n        throw Object.assign(new Error(), data.error);\n    }\n    return res.json();\n}\n/** Database Instance */\nexport class Database {\n    constructor({ projectId, auth, name = '(default)', host = 'firestore.googleapis.com', ssl = true }) {\n        if (projectId === undefined)\n            throw Error('Database constructor expected the \"config\" argument to have a valid \"projectId\" property');\n        this.name = name;\n        this.auth = auth;\n        this.rootPath = `projects/${projectId}/databases/${name}/documents`;\n        this.endpoint = `http${ssl ? 's' : ''}://${host}/v1/${this.rootPath}`;\n    }\n    /**\n     * For internal use only.\n     * Uses native fetch, but adds authorization headers\n     * if the Reference was instantiated with an auth instance.\n     * The API is exactly the same as native fetch.\n     * @private\n     */\n    fetch(input, init) {\n        if (this.auth && this.auth.authorizedRequest)\n            return this.auth.authorizedRequest(input, init).then(handleApiResponse);\n        return fetch(input, init).then(handleApiResponse);\n    }\n    /**\n     * Returns a reference to a document or a collection.\n     * @param {(string|Document)} path Path to the collection or document.\n     * @returns {Reference} instance of a reference.\n     */\n    ref(path) {\n        if (path instanceof Document)\n            path = path.__meta__.path;\n        return new Reference(path, this);\n    }\n    async batchGet(refs) {\n        const response = await this.fetch(this.endpoint + ':batchGet', {\n            method: 'POST',\n            body: JSON.stringify({\n                documents: refs.map(ref => {\n                    const path = restrictTo('doc', ref);\n                    return `${this.rootPath}/${path}`;\n                })\n            })\n        });\n        return response.map((entry) => entry.found\n            ? new Document(entry.found, this)\n            : Object.defineProperty({}, '__missing__', { value: entry.missing }));\n    }\n    /** Returns a new transaction instance */\n    transaction() {\n        return new Transaction(this);\n    }\n    /**\n     * Executes the given `updateFunction` and attempts to commit\n     * the changes applied within it as a Transaction. If any document\n     * read within the transaction has changed, Cloud Firestore retries\n     * the updateFunction. If it fails to commit after 5 attempts, the\n     * transaction fails and throws.\n     *\n     * Will not re-attempt if an error is thrown inside the `updateFunction`\n     * or if any error that is not related to the transaction is received\n     * like a network error etc.\n     */\n    async runTransaction(fn, attempts = 5) {\n        const tx = new Transaction(this);\n        while (attempts > 0) {\n            await fn(tx);\n            // Only retry on transaction errors.\n            try {\n                await tx.commit();\n                break; // Stop trying if it succeeded.\n            }\n            catch (e) {\n                // Only throw if the error is not related to the transaction, or it is the last attempt.\n                if (attempts === 0 ||\n                    (e.status !== 'NOT_FOUND' && e.status !== 'FAILED_PRECONDITION'))\n                    throw Error(e);\n            }\n            attempts--;\n        }\n    }\n    /**\n     * Query all all collections that match the given name that\n     * also are descendants of a given document (or root by default).\n     */\n    collectionGroup(collectionId, options = {}) {\n        return new Query(this.ref('parent' in options ? options.parent : ''), {\n            from: {\n                collectionId,\n                allDescendants: true\n            },\n            ...options\n        });\n    }\n}\n","/** Represents a firebase GeoPoint value */\nexport default class GeoPoint {\n    constructor(latitude, longitude) {\n        this.latitude = latitude;\n        this.longitude = longitude;\n        if (typeof latitude !== 'number')\n            throw Error('The latitude argument should be of type number');\n        if (typeof latitude !== 'number')\n            throw Error('The longitude argument should be of type number');\n        if (latitude >= 90 || latitude <= -90)\n            throw Error(\"GeoPoint's latitude should be within the range of -90.0 and 90.0\");\n        if (longitude >= 180 || longitude <= -180)\n            throw Error(\"GeoPoint's longitude should be within the range of -180.0 and 180.0\");\n    }\n    toJSON() {\n        return {\n            geoPointValue: { ...this }\n        };\n    }\n}\n","import { decode } from './utils';\n/**\n * Wrapper around a fetched objects that represent a Firestore document.\n * It is supposed to be used as a regular JS object but has a hidden\n * property that holds the meta data of the document.\n *\n * That property is called `__meta__`, it should not be modified, and is non-enumerable.\n * It is used internally to identify the document when writing the\n * data to the database.\n */\nexport class Document {\n    constructor(rawDoc, db) {\n        if (db === undefined)\n            throw Error('Argument \"db\" is required but missing');\n        const { name, createTime, updateTime } = rawDoc;\n        const meta = {\n            db,\n            name,\n            createTime,\n            updateTime,\n            path: name.replace(db.rootPath, ''),\n            id: name.split('/').pop()\n        };\n        Object.defineProperty(this, '__meta__', { value: meta });\n        Object.assign(this, decode(rawDoc, db));\n    }\n}\n","import { Document } from './Document';\n/**\n * Represents a collection list response, with functionality\n * for getting the next page when available.\n * @param {Object} rawList The response \"raw\" list object.\n * @param {Reference} ref A reference to the collection.\n * @param {Object} options Any options that were passed at first to the get request.\n */\nexport class List {\n    constructor(rawList, ref, options = {}) {\n        if (ref === undefined)\n            throw Error('The \"reference\" argument is required when creating a List');\n        if (!ref.isCollection)\n            throw Error('The reference in a list should point to a collection');\n        const { documents, nextPageToken } = rawList;\n        this.ref = ref;\n        this.options = options;\n        this.documents = documents\n            ? documents.map(rawDoc => new Document(rawDoc, ref.db))\n            : [];\n        this.options.pageToken = nextPageToken;\n    }\n    /** Fetches the next page in the query */\n    getNextPage() {\n        return this.ref.list(this.options);\n    }\n    [Symbol.iterator]() {\n        // Use a new index for each iterator. This makes multiple\n        // iterations over the iterable safe for non-trivial cases,\n        // such as use of break or nested looping over the same iterable.\n        let index = 0;\n        return {\n            next: () => {\n                if (index < this.documents.length) {\n                    return { value: this.documents[index++], done: false };\n                }\n                else {\n                    return { done: true };\n                }\n            }\n        };\n    }\n}\n","import { Query } from './Query';\nimport { Document } from './Document';\nimport { List } from './List';\nimport { trimPath, isPath, objectToQuery, restrictTo, compileOptions } from './utils';\nexport class Reference {\n    constructor(path, db) {\n        var _a;\n        this.db = db;\n        if (typeof path !== 'string')\n            throw Error('The \"path\" argument should be a string');\n        // Normalize the path by removing slashes from\n        // the beginning or the end and trimming spaces.\n        path = trimPath(path);\n        this.id = (_a = path.split('/').pop()) !== null && _a !== void 0 ? _a : '';\n        this.path = path;\n        this.name = `${db.rootPath}/${path}`;\n        this.endpoint = `${db.endpoint}/${path}`;\n        this.isRoot = path === '';\n    }\n    /** Returns a reference to the parent document/collection */\n    get parent() {\n        if (this.isRoot)\n            throw Error(\"Can't get the parent of root\");\n        return new Reference(this.path.replace(/\\/?([^/]+)\\/?$/, ''), this.db);\n    }\n    /** Returns a reference to the parent collection */\n    get parentCollection() {\n        if (this.isRoot)\n            throw Error(\"Can't get parent of a root collection\");\n        if (this.isCollection)\n            return new Reference(this.path.replace(/(\\/([^/]+)\\/?){2}$|^([^/]+)$/, ''), this.db);\n        return this.parent;\n    }\n    /** Returns true if this reference is a collection */\n    get isCollection() {\n        return isPath('col', this.path);\n    }\n    /** Returns a reference to the specified child path */\n    child(path) {\n        // Remove starting forward slash\n        path = path.replace(/^\\/?/, '');\n        // Return a newly created document with the new sub path.\n        return new Reference(`${this.path}/${path}`, this.db);\n    }\n    async transact(method, obj, options = {}) {\n        const tx = this.db.transaction();\n        const res = tx[method](this, obj, options);\n        return await tx.commit().then(() => res);\n    }\n    /** Returns all documents in the collection */\n    async list(options = {}) {\n        restrictTo('col', this);\n        return new List(await this.db.fetch(this.endpoint + objectToQuery(compileOptions(options))), this, options);\n    }\n    /** Returns the document of this reference. */\n    async get(options = {}) {\n        restrictTo('doc', this);\n        return new Document(await this.db.fetch(this.endpoint + objectToQuery(compileOptions(options))), this.db);\n    }\n    /** Create a new document with a randomly generated id */\n    async add(obj, options = {}) {\n        restrictTo('col', this);\n        return this.transact('add', obj, options);\n    }\n    /** Create a new document or overwrites an existing one matching this reference. */\n    async set(obj, options = {}) {\n        restrictTo('doc', this);\n        return this.transact('set', obj, options);\n    }\n    /** Updates a document while ignoring all missing fields in the provided object. */\n    async update(obj, options = {}) {\n        restrictTo('doc', this);\n        return this.transact('update', obj, options);\n    }\n    /** Deletes the referenced document from the database. */\n    async delete(options = {}) {\n        restrictTo('doc', this);\n        return this.transact('delete', options);\n    }\n    /** Queries the child documents/collections of this reference. */\n    query(options = {}) {\n        restrictTo('col', this);\n        return new Query(this.parent, {\n            from: {\n                collectionId: this.id\n            },\n            ...options\n        });\n    }\n    toJSON() {\n        return {\n            referenceValue: this.name\n        };\n    }\n}\n","import { compileOptions, encode, fid, getPathFromRef, restrictTo } from './utils';\nimport { Document } from './Document';\nexport class Transaction {\n    constructor(db) {\n        this.db = db;\n        this.writes = [];\n        this.preconditions = {};\n    }\n    /**\n     * Creates a write instruction and adds it into the\n     * transaction writes array.\n     * @private\n     */\n    write(ref, data, options = {}) {\n        if (typeof data !== 'object')\n            throw Error('The data argument is missing');\n        const transforms = [];\n        const name = `${this.db.rootPath}/${getPathFromRef(ref)}`;\n        const precondition = this.preconditions[name];\n        // Compile the JS Object into a Firebase Document.\n        const doc = encode(ref instanceof Document ? ref : data, transforms);\n        // Compile the options object into Firebase API arguments.\n        options = compileOptions(options, data);\n        // Check if there is any precondition created by getting a document\n        // as part of this transaction, and if there is then use it.\n        precondition && (options.currentDocument = precondition);\n        // Set the document's name\n        doc.name = name;\n        // Add the static properties.\n        this.writes.push({\n            update: doc,\n            ...options\n        });\n        // Add the Transforms if available.\n        transforms.length &&\n            this.writes.push({\n                transform: {\n                    document: doc.name,\n                    fieldTransforms: transforms\n                }\n            });\n    }\n    /**\n     * Wraps batch get with additional functionality needed in transactions.\n     * Transactions need to be atomic. So in order to know that the document\n     * wasn't changed concurrently then we save the updateTime of each document.\n     *\n     * Later we tell the database to use that as a precondition for the write.\n     * In other words, if the update time of a document changed, then abort\n     * the transaction. However, if a document didn't exist, then we use that\n     * as a precondition, telling the database that if it was created concurrently\n     * then it should abort the operation.\n     */\n    async get(refs) {\n        const docs = await this.db.batchGet(refs);\n        docs.forEach((doc) => {\n            const { name, updateTime } = doc.__meta__ || { name: doc.__missing__ };\n            this.preconditions[name] = updateTime\n                ? { updateTime }\n                : { exists: false };\n        });\n        return docs;\n    }\n    add(ref, data, options = {}) {\n        const path = `${restrictTo('col', ref)}/${fid()}`;\n        this.write(path, data, { exists: false, ...options });\n        return this.db.ref(path);\n    }\n    set(ref, data, options = {}) {\n        restrictTo('doc', ref);\n        this.write(ref, data, options);\n    }\n    update(ref, data, options = {}) {\n        restrictTo('doc', ref);\n        this.write(ref, data, { exists: true, updateMask: true, ...options });\n    }\n    /**\n     * Adds a delete operation to the transaction.\n     */\n    delete(ref, options = {}) {\n        const name = `${this.db.rootPath}/${restrictTo('doc', ref)}`;\n        options = compileOptions(options);\n        // Check if there is any precondition created by getting a document\n        // as part of this transaction, and if there is then use it.\n        this.preconditions[name] &&\n            (options.currentDocument = this.preconditions[name]);\n        this.writes.push({\n            delete: name,\n            ...options\n        });\n    }\n    /**\n     * Commits the transaction.\n     * Will throw if the transaction failed.\n     */\n    async commit() {\n        this.preconditions = {};\n        return void (await this.db.fetch(this.db.endpoint + ':commit', {\n            method: 'POST',\n            body: JSON.stringify({ writes: this.writes })\n        }));\n    }\n}\n","import { Database } from \"firebase-firestore-lite\";\nimport { IDbSurvey, ISurveyData } from \"./db\";\n\nexport const db = new Database({ projectId: \"thucdia-e52ff\" });\nconst db_prefix = process.env.NODE_ENV === \"production\" ? \"prod\" : \"dev\";\n\nexport type RemoteData =\n  | { type: \"survey\"; payload: IDbSurvey }\n  | { type: \"surveyData\"; payload: ISurveyData }\n  | { type: \"surveyRevision\"; payload: ISurveyData };\n\nconst upsertSurvey = async (type: \"survey\", payload: IDbSurvey, machineId: string) => {\n  const ref = db.ref(`${db_prefix}--${type}/${payload.surveyId}`);\n\n  const { syncStatus, ...content } = payload;\n\n  const doc = await ref.set({ ...content, machineId });\n  return doc;\n};\n\nconst upsertData = async (type: \"surveyData\" | \"surveyRevision\", payload: ISurveyData, machineId: string) => {\n  const ref = db.ref(`${db_prefix}--${type}/${payload.surveyDataId}`);\n\n  const { syncStatus, ...content } = payload;\n\n  const doc = await ref.set({ ...content, machineId });\n  return doc;\n};\n\nexport const upsert = async (data: RemoteData, machineId: string) => {\n  switch (data.type) {\n    case \"survey\":\n      return await upsertSurvey(data.type, data.payload, machineId);\n    case \"surveyData\":\n    case \"surveyRevision\":\n      return await upsertData(data.type, data.payload, machineId);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"wrapper__1x8n1\",\"header\":\"header__3tjqy\",\"syncStatus\":\"syncStatus__29ty1\"};","import { makeId } from \"../db/db\";\n\nconst key = \"voser__machineId\";\n\nexport const useMachineId = () => {\n  const ls = window.localStorage.getItem(key);\n  if (!ls) {\n    const id = makeId();\n    window.localStorage.setItem(key, id);\n    return id;\n  } else {\n    return ls;\n  }\n};\n"],"sourceRoot":""}