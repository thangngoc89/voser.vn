{"version":3,"sources":["webpack:///./components/error.css","webpack:///./components/spinner.css","webpack:///./components/db/db.ts","webpack:///./components/error.tsx","webpack:///./components/spinner.tsx","webpack:///./components/db/db_calls.ts","webpack:///./routes/create-survey-route.tsx"],"names":["makeId","ulid","SyncStatus","db","Dexie","constructor","super","this","version","stores","record_list","record_data","record_revisions","upgrade","tx","toCollection","modify","surveyData","syncStatus","NotSync","surveyDataId","survey","list","table","data","revision","Error","title","explain","class","style","notfound","href","Spinner","isMounted","setIsMounted","useState","useEffect","className","objStr","spinner","delay","loadSurvey","async","surveyId","currentForm","result","get","saveForm","formName","formData","transaction","surveyForm","put","add","createSurvey","surveyType","createdAt","Date","now","CreateSurvey","state","setState","type","then","route","catch","error","console","payload","message"],"mappings":"2FACe,KAAC,SAAW,kB,oCCAZ,KAAC,QAAU,iBAAiB,KAAO,cAAc,MAAQ,e,gSCGjE,MAAMA,EAASC,IAEf,IAAKC,GAGX,SAHWA,OAAU,qBAAVA,IAAU,mBAGrB,CAHWA,MAAU,KAmEf,MAAMC,EAAK,IA9ClB,cAA4BC,IAK1BC,cACEC,MAAM,SAAS,sEACfC,KAAKC,QAAQ,GAAGC,OAAO,CACrBC,YAAa,kCACbC,YAAa,0BAEfJ,KAAKC,QAAQ,GACVC,OAAO,CACNC,YAAa,8CACbC,YAAa,oCACbC,iBAAkB,2CAEnBC,SAASC,GAEDA,EAAGH,YAAYI,eAAeC,QAAQC,IAC3CA,EAAWC,WAAahB,EAAWiB,aACI,IAA5BF,EAAWG,eACpBH,EAAWG,aAAenB,cAC5B,MAKNM,KAAKC,QAAQ,GACVC,OAAO,CACNC,YAAa,8CACbC,YAAa,oCACbC,iBAAkB,2CAEnBC,SAASC,GAEDA,EAAGJ,YAAYK,eAAeC,QAAQK,IAC3CA,EAAOH,WAAahB,EAAWiB,OAAO,MAG5CZ,KAAKe,KAAOf,KAAKgB,MAAM,eACvBhB,KAAKiB,KAAOjB,KAAKgB,MAAM,eACvBhB,KAAKkB,SAAWlB,KAAKgB,MAAM,mBAC7B,E,qCCtEF,0EAOA,MAAMG,EAAQ,EAAGC,QAAOC,aAEpB,SAAKC,MAAOC,IAAMC,UAChB,YAAKJ,GACJC,GAAW,WAAIA,GAChB,EAAC,OAAI,CAACI,KAAK,KACT,mC,8DCZR,sFAIO,MAAMC,EAAwB,KACnC,MAAOC,EAAWC,GAAgBC,oBAAkB,GAKpD,OAJAC,qBAAU,KACRF,GAAa,EAAK,GACjB,IAGD,SACEG,UAAWC,YAAO,CAChB,CAACT,IAAMU,UAAU,EACjB,CAACV,IAAMW,OAAQP,KAEZ,C,6DChBX,sHAEO,MAAMQ,EAAaC,MAAOC,EAAkBC,KACjD,MAAMC,QAAe3C,IAAGqB,KAAKuB,IAAI,CAACH,EAAUC,IAG5C,MAAoB,kBAAhBA,QAAqD,IAAXC,QAC/B3C,IAAGqB,KAAKuB,IAAI,CAACH,EAAU,kBAE/BE,CAAM,EAGFE,EAAWL,MAAOC,EAAkBK,EAAkBC,UACpD/C,IAAGgD,YAAY,KAAM,CAAC,cAAe,qBAAqBR,UACrE,MAAM1B,EAAa,CACjBG,aAAcpB,cACd4C,WACAQ,WAAYH,EACZzB,KAAM0B,EACNhC,WAAYhB,IAAWiB,eAGnBhB,IAAGqB,KAAK6B,IAAIpC,EAAY,CAAC2B,EAAUK,UACnC9C,IAAGsB,SAAS6B,IAAIrC,EAAYA,EAAWG,aAAa,IAIjDmC,EAAeZ,eACbxC,IAAGmB,KAAKgC,IAAI,CACvBV,SAAU5C,cACVwD,WAAYA,EACZC,UAAWC,KAAKC,MAChBzC,WAAYhB,IAAWiB,S,oCChC3B,mFAsCeyC,UAzBmC,EAAGJ,iBACnD,MAAOK,EAAOC,GAAY1B,mBAAgB,CAAE2B,KAAM,YAYlD,OAXA1B,qBAAU,KACRkB,YAAaC,GACVQ,MAAMpB,IACLqB,gBAAO,WAAUrB,KAAY,EAAK,IAEnCsB,OAAOC,IACNC,QAAQD,MAAMA,GACdL,EAAS,CAAEC,KAAM,QAASM,QAASF,EAAMG,SAAU,GACnD,GACH,CAACd,IAEIK,EAAME,MACZ,IAAK,UACH,OAAO,SAAKzB,UAAU,WAAW,EAAC,IAAO,OAC3C,IAAK,QACH,OACE,SAAKA,UAAU,WACb,EAAC,IAAK,CAACX,MAAM,mBAAmBC,QAASiC,EAAMQ,WAEjD,C","file":"route-create-survey-route.chunk.11012.esm.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"notfound\":\"notfound__1Mgab\"};","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"spinner__3xt9E\",\"spin\":\"spin__2BBia\",\"delay\":\"delay__3sfhE\"};","import Dexie from \"dexie\";\nimport { SurveyType } from \"../types\";\nimport { ulid } from \"ulid\";\n\nexport const makeId = ulid;\n\nexport enum SyncStatus {\n  NotSync = 0,\n  Synced = 1,\n}\n\nexport interface IDbSurvey {\n  surveyId: string;\n  surveyType: SurveyType;\n  createdAt: number;\n  syncStatus: SyncStatus;\n}\n\nexport type SurveyDataKey = [string, string];\nexport interface ISurveyData {\n  surveyDataId: string;\n  surveyId: string;\n  surveyForm: string;\n  data: any;\n  syncStatus: SyncStatus;\n}\n\nclass VoserDatabase extends Dexie {\n  list: Dexie.Table<IDbSurvey, string>;\n  data: Dexie.Table<ISurveyData, SurveyDataKey>;\n  revision: Dexie.Table<ISurveyData, string>;\n\n  constructor() {\n    super(\"Voser\");\n    this.version(4).stores({\n      record_list: \"surveyId, surveyType, createdAt\",\n      record_data: \"[surveyId+surveyForm]\",\n    });\n    this.version(5)\n      .stores({\n        record_list: \"surveyId, surveyType, createdAt, syncStatus\",\n        record_data: \"[surveyId+surveyForm], syncStatus\",\n        record_revisions: \"surveyDataId, syncStatus, surveyDataId\",\n      })\n      .upgrade((tx) => {\n        // @ts-ignore\n        return tx.record_data.toCollection().modify((surveyData: ISurveyData) => {\n          surveyData.syncStatus = SyncStatus.NotSync;\n          if (typeof surveyData.surveyDataId === \"undefined\") {\n            surveyData.surveyDataId = ulid();\n          }\n        });\n      });\n\n    // This is same as version 5. Just for transaction\n    this.version(6)\n      .stores({\n        record_list: \"surveyId, surveyType, createdAt, syncStatus\",\n        record_data: \"[surveyId+surveyForm], syncStatus\",\n        record_revisions: \"surveyDataId, syncStatus, surveyDataId\",\n      })\n      .upgrade((tx) => {\n        // @ts-ignore\n        return tx.record_list.toCollection().modify((survey: ISurvey) => {\n          survey.syncStatus = SyncStatus.NotSync;\n        });\n      });\n    this.list = this.table(\"record_list\");\n    this.data = this.table(\"record_data\");\n    this.revision = this.table(\"record_revisions\");\n  }\n}\n\nexport const db = new VoserDatabase();\n\n// @ts-ignore\n// global.db = db;\n","import { Link } from \"preact-router/match\";\nimport style from \"./error.css\";\n\ninterface Props {\n  title: string;\n  explain?: string;\n}\nconst Error = ({ title, explain }: Props) => {\n  return (\n    <div class={style.notfound}>\n      <h1>{title}</h1>\n      {explain && <p>{explain}</p>}\n      <Link href=\"/\">\n        <h4>Quay lại trang chủ</h4>\n      </Link>\n    </div>\n  );\n};\n\nexport { Error };\n","\nimport { useState, useEffect } from \"react\";\nimport style from \"./spinner.css\";\nimport objStr from \"obj-str\";\n\nexport const Spinner: React.FC<{}> = () => {\n  const [isMounted, setIsMounted] = useState<boolean>(false);\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  return (\n    <div\n      className={objStr({\n        [style.spinner]: true,\n        [style.delay]: isMounted,\n      })}\n    ></div>\n  );\n};\n","import { SurveyType } from \"../types\";\nimport { db, makeId, SyncStatus } from \"./db\";\n\nexport const loadSurvey = async (surveyId: string, currentForm: string) => {\n  const result = await db.data.get([surveyId, currentForm]);\n\n  // DO NOT REMOVE. I was so stupid\n  if (currentForm === \"tieu_hoc_form\" && typeof result === \"undefined\") {\n    return await db.data.get([surveyId, \"mau_giao_form\"]);\n  }\n  return result;\n};\n\nexport const saveForm = async (surveyId: string, formName: string, formData: any) => {\n  return await db.transaction(\"rw\", [\"record_data\", \"record_revisions\"], async () => {\n    const surveyData = {\n      surveyDataId: makeId(),\n      surveyId,\n      surveyForm: formName,\n      data: formData,\n      syncStatus: SyncStatus.NotSync,\n    };\n\n    await db.data.put(surveyData, [surveyId, formName]);\n    await db.revision.add(surveyData, surveyData.surveyDataId);\n  });\n};\n\nexport const createSurvey = async (surveyType: SurveyType) => {\n  return await db.list.add({\n    surveyId: makeId(),\n    surveyType: surveyType,\n    createdAt: Date.now(),\n    syncStatus: SyncStatus.NotSync,\n  });\n};\n","\nimport { useEffect, useState } from \"react\";\nimport { createSurvey } from \"../components/db/db_calls\";\nimport { SurveyType } from \"src/components/types\";\nimport { route } from \"preact-router\";\nimport { Spinner } from \"../components/spinner\";\nimport { Error } from \"../components/error\";\n\ninterface CreateSurveyProps {\n  surveyType: SurveyType;\n}\n\ntype State = { type: \"error\"; payload: string } | { type: \"initial\" };\n\nconst CreateSurvey: React.FC<CreateSurveyProps> = ({ surveyType }) => {\n  const [state, setState] = useState<State>({ type: \"initial\" });\n  useEffect(() => {\n    createSurvey(surveyType)\n      .then((surveyId) => {\n        route(`/survey/${surveyId}`, true);\n      })\n      .catch((error) => {\n        console.error(error);\n        setState({ type: \"error\", payload: error.message });\n      });\n  }, [surveyType]);\n\n  switch (state.type) {\n    case \"initial\":\n      return <div className=\"wrapper\">{<Spinner />}</div>;\n    case \"error\":\n      return (\n        <div className=\"wrapper\">\n          <Error title=\"Đã có lỗi xảy ra\" explain={state.payload} />\n        </div>\n      );\n  }\n};\n\nexport default CreateSurvey;\n"],"sourceRoot":""}