import{i as f}from"./schema_loader-c5d52786.js";import{f as i}from"./index-b0b07812.js";import{l}from"./db_calls-9f004f7d.js";import{loaderSurveyDataAndSchema as c}from"./survey-edit--loader-417138b0.js";import{j as d}from"./index-29bf6ca3.js";import"./tieu_hoc_child_oidp-3baf1c59.js";import"./db-61ab6f32.js";const y=t=>{const{survey:a}=t;let e={};return a.forEach(o=>{m(o,e)}),e};function m(t,a){switch(t.type){case"date":if(t.defaultValue){const e=t.defaultValue;if(e.value=="now()"){const o=e.format||"dd-MM-yyyy";a[t.name]=i(new Date,o)}}break;case"group":t.fields.forEach(e=>{m(e,a)});break}}const S=async({request:t,params:a})=>{f(a.formName);const{survey:e,surveySchema:o}=await c(a),r=o.forms.find(({form:u})=>u.name===a.formName);if(r==null)throw new Response(`Form ${a.formName} isn't available`,{status:400,statusText:"Unknown form name"});const s=await l(e.surveyId,a.formName),n=r.makeInitialValues?r.makeInitialValues():y(r.form);return d({formSchema:r,survey:e,formData:s||null,defaultValues:n})};export{S as loader};
